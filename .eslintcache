[{"/Users/home/Desktop/gtpprojects/portfolio/src/index.js":"1","/Users/home/Desktop/gtpprojects/portfolio/src/reportWebVitals.js":"2","/Users/home/Desktop/gtpprojects/portfolio/src/App.js":"3","/Users/home/Desktop/gtpprojects/portfolio/src/components/Navbar.js":"4","/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Projects.js":"5","/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Intro.js":"6","/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Education.js":"7","/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Experience.js":"8","/Users/home/Desktop/gtpprojects/portfolio/src/data.js":"9"},{"size":500,"mtime":1730701596307,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1730701596308,"results":"12","hashOfConfig":"11"},{"size":737,"mtime":1730701596306,"results":"13","hashOfConfig":"11"},{"size":2928,"mtime":1730701596307,"results":"14","hashOfConfig":"11"},{"size":3621,"mtime":1730701596307,"results":"15","hashOfConfig":"11"},{"size":4107,"mtime":1730712693794,"results":"16","hashOfConfig":"11"},{"size":3486,"mtime":1730701596306,"results":"17","hashOfConfig":"11"},{"size":2638,"mtime":1730701596306,"results":"18","hashOfConfig":"11"},{"size":15431,"mtime":1730709742358,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1346owd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/home/Desktop/gtpprojects/portfolio/src/index.js",[],["40","41"],"/Users/home/Desktop/gtpprojects/portfolio/src/reportWebVitals.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/App.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/components/Navbar.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Projects.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Intro.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Education.js",[],"/Users/home/Desktop/gtpprojects/portfolio/src/Pages/Experience.js",["42"],"import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { experiences } from \"../data\";\nimport { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst color = ['#0099ff', '#ff0055', '#22cc88', '#ffaa00'];\nconst useStyles = makeStyles({\n    experience: {\n        marginTop: '7em'\n    },\n\n    cardTile: {\n        backgroundColor: 'black',\n        color: 'white',\n        border: '1px solid rgb(100, 100, 100)',\n        borderRadius: '12px',\n        marginBottom: '3em'\n    },\n    textColor: {\n        color: 'white'\n    },\n    subheader: {\n        color: 'white'\n    },\n    subTitle: {\n        color: 'white',\n        fontSize: '4em',\n        fontWeight: 'bold',\n    }\n})\n\nfunction ExperienceTile({ title, company, companyType, description, startDate, endDate, id }) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.cardTile} key={id}>\n            <CardHeader className={classes.textColor} classes={{ subheader: classes.subheader }}\n                title={title}\n                subheader={`${company} [${companyType}]`}\n            />\n\n            <CardContent>\n                <Typography className={classes.textColor} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {description.map(item => {\n                        return (\n                            <>\n                                <div dangerouslySetInnerHTML={{ __html: item }}></div>\n                                <br></br>\n                            </>\n                        )\n                    })}\n                </Typography>\n                <br></br>\n                <time>{startDate} â€” {endDate}</time>\n\n            </CardContent>\n\n        </Card>\n    )\n}\n\n\nfunction Experience() {\n    const classes = useStyles();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    return (\n        <div className={classes.experience}>\n            <Grid container>\n                <Grid className={classes.subTitle} item sm={12}>Experiences Everyday</Grid>\n                <Grid item sm={false} md={2}></Grid>\n                <Grid item sm={12} md={8}>\n                    {experiences.map(item => (\n                        <ExperienceTile key={item.id} {...item} />\n                    ))}\n                </Grid>\n                <Grid item sm={false} md={2}></Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Experience;","/Users/home/Desktop/gtpprojects/portfolio/src/data.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":7,"nodeType":"49","messageId":"50","endLine":11,"endColumn":12},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]